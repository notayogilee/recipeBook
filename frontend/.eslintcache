[{"/home/lee/Desktop/recipeBook/frontend/src/index.js":"1","/home/lee/Desktop/recipeBook/frontend/src/App.js":"2","/home/lee/Desktop/recipeBook/frontend/src/reportWebVitals.js":"3","/home/lee/Desktop/recipeBook/frontend/src/components/Header.js":"4","/home/lee/Desktop/recipeBook/frontend/src/components/Footer.js":"5","/home/lee/Desktop/recipeBook/frontend/src/screens/LoginScreen.js":"6","/home/lee/Desktop/recipeBook/frontend/src/screens/LandingScreen.js":"7","/home/lee/Desktop/recipeBook/frontend/src/screens/RegisterScreen.js":"8","/home/lee/Desktop/recipeBook/frontend/src/store.js":"9","/home/lee/Desktop/recipeBook/frontend/src/screens/HomeScreen.js":"10","/home/lee/Desktop/recipeBook/frontend/src/screens/RecipeScreen.js":"11","/home/lee/Desktop/recipeBook/frontend/src/components/Ingredient.js":"12","/home/lee/Desktop/recipeBook/frontend/src/actions/userActions.js":"13","/home/lee/Desktop/recipeBook/frontend/src/constants/userContants.js":"14","/home/lee/Desktop/recipeBook/frontend/src/reducers/recipeReducers.js":"15","/home/lee/Desktop/recipeBook/frontend/src/constants/recipeConstants.js":"16","/home/lee/Desktop/recipeBook/frontend/src/actions/recipeActions.js":"17","/home/lee/Desktop/recipeBook/frontend/src/components/Loader.js":"18","/home/lee/Desktop/recipeBook/frontend/src/components/Message.js":"19","/home/lee/Desktop/recipeBook/frontend/src/reducers/userReducers.js":"20"},{"size":565,"mtime":1609970339484,"results":"21","hashOfConfig":"22"},{"size":789,"mtime":1610228236568,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1609247091712,"results":"24","hashOfConfig":"22"},{"size":2371,"mtime":1610227429443,"results":"25","hashOfConfig":"22"},{"size":130,"mtime":1609257014263,"results":"26","hashOfConfig":"22"},{"size":4971,"mtime":1610149996067,"results":"27","hashOfConfig":"22"},{"size":4298,"mtime":1610228808388,"results":"28","hashOfConfig":"22"},{"size":4848,"mtime":1610138604908,"results":"29","hashOfConfig":"22"},{"size":851,"mtime":1610059912365,"results":"30","hashOfConfig":"22"},{"size":3986,"mtime":1609974607564,"results":"31","hashOfConfig":"22"},{"size":5099,"mtime":1609883420570,"results":"32","hashOfConfig":"22"},{"size":468,"mtime":1609706583427,"results":"33","hashOfConfig":"22"},{"size":1822,"mtime":1610138917298,"results":"34","hashOfConfig":"22"},{"size":378,"mtime":1610038996035,"results":"35","hashOfConfig":"22"},{"size":951,"mtime":1609879349816,"results":"36","hashOfConfig":"22"},{"size":348,"mtime":1609792123026,"results":"37","hashOfConfig":"22"},{"size":1782,"mtime":1610060325788,"results":"38","hashOfConfig":"22"},{"size":546,"mtime":1609794064758,"results":"39","hashOfConfig":"22"},{"size":1092,"mtime":1609791931614,"results":"40","hashOfConfig":"22"},{"size":942,"mtime":1610040083621,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1qcinur",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/lee/Desktop/recipeBook/frontend/src/index.js",[],["86","87"],"/home/lee/Desktop/recipeBook/frontend/src/App.js",[],"/home/lee/Desktop/recipeBook/frontend/src/reportWebVitals.js",[],"/home/lee/Desktop/recipeBook/frontend/src/components/Header.js",["88","89","90","91","92"],"/home/lee/Desktop/recipeBook/frontend/src/components/Footer.js",[],["93","94"],"/home/lee/Desktop/recipeBook/frontend/src/screens/LoginScreen.js",["95"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { login } from '../actions/userActions'\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider\n} from '@material-ui/core/styles'\nimport {\n  Container,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  InputAdornment,\n  IconButton,\n  Zoom\n} from '@material-ui/core'\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#ffab40' },\n    secondary: { main: '#8d6e63' },\n  }\n})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FCFFDB',\n    height: '100vh'\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 32\n  },\n  input: {\n    marginBottom: 16,\n    width: '100%'\n  },\n  link: {\n    textDecoration: 'none',\n    color: '#8d6e63'\n  }\n}))\n\nconst LoginScreen = ({ location, history }) => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [showPassword, setShowPassword] = useState(false)\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword)\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/recipes\"\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const classes = useStyles();\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Zoom in={!loggedIn}>\n          <Zoom in={loggedIn}>\n            <Container maxWidth=\"md\" className={classes.root} >\n\n              {error && <Message severity=\"error\" message={error} />}\n              {loading ? <Loader /> : (\n                <>\n                  <Link to=\"/\" className={classes.link}>\n                    <Typography\n                      component=\"header\"\n                      variant=\"h2\"\n                      color=\"primary\"\n                      style={{\n                        fontFamily: 'Righteous',\n                        margin: 16,\n                        alignItems: 'center',\n                        justifyContent: 'center',\n\n                      }}\n                    >\n                      Recipe Book\n           </Typography>\n                  </Link>\n\n                  <Paper className={classes.paper} elevation={3}>\n                    <form\n                      className={classes.paper}\n                      autoComplete=\"off\"\n                      onSubmit={submitHandler}\n                    >\n                      <TextField\n                        id=\"email\"\n                        label=\"Email\"\n                        className={classes.input}\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <TextField\n                        id=\"password\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        label=\"Password\"\n                        className={classes.input}\n                        onChange={(e) => setPassword(e.target.value)}\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                              >\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                              </IconButton>\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <Button\n                        type=\"submit\"\n                        variant='contained'\n                        color='secondary'\n                        style={{ marginTop: \"16px\" }}\n                      >\n                        Login\n              </Button>\n                    </form>\n                    <Typography variant=\"subtitle1\">\n                      Don't have an account? <Link className={classes.link} to=\"/register\"><strong>Register</strong></Link>\n                    </Typography>\n                  </Paper>\n                </>\n              )}\n\n            </Container>\n          </Zoom>\n        </Zoom>\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default LoginScreen\n","/home/lee/Desktop/recipeBook/frontend/src/screens/LandingScreen.js",["96"],"/home/lee/Desktop/recipeBook/frontend/src/screens/RegisterScreen.js",["97","98"],"import React, { useState, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { register } from '../actions/userActions'\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider\n} from '@material-ui/core/styles'\nimport {\n  Container,\n  Paper,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Input\n} from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#ffab40' },\n    secondary: { main: '#8d6e63' },\n  }\n})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FCFFDB',\n    height: '100vh'\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 32\n  },\n  input: {\n    marginBottom: 16,\n    width: '100%'\n  },\n  link: {\n    textDecoration: 'none',\n    color: '#8d6e63'\n  }\n}))\n\nconst RegisterScreen = ({ location, history }) => {\n  const classes = useStyles();\n\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector(state => state.userRegister)\n  const userLogin = useSelector(state => state.userLogin)\n\n  // useMemo for conditional userInfo as dependancy in useEffect\n  let userInfo = useMemo(() => { }, [])\n\n  // looking for userInfo in localstorage, \n  // starts in userRegister then is set as initial state\n  // in userLogin in store.js of redux\n  if (!userRegister.userInfo) {\n    userInfo = userLogin.userInfo\n  }\n  userInfo = userRegister.userInfo\n\n  const { loading, error } = userRegister\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/recipes\"\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n      setTimeout(() => {\n        setMessage('')\n      }, 5000)\n    } else {\n      dispatch(register(firstName, lastName, email, password))\n    }\n  }\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Container maxWidth=\"md\" className={classes.root} >\n          <Link to=\"/\" className={classes.link}>\n            <Typography\n              component=\"header\"\n              variant=\"h2\"\n              color=\"primary\"\n              style={{\n                fontFamily: 'Righteous',\n                margin: 16,\n                alignItems: 'center',\n                justifyContent: 'center',\n\n              }}\n            >\n              Recipe Book\n        </Typography>\n          </Link>\n          <Paper className={classes.paper} elevation={3}>\n            <Typography>{message}</Typography>\n            <form className={classes.paper} autoComplete=\"off\">\n              <FormControl>\n                <InputLabel htmlFor=\"component-simple\">First Name</InputLabel>\n                <Input id=\"component-simple\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n              </FormControl>\n              <FormControl>\n                <InputLabel htmlFor=\"component-simple\">Last Name</InputLabel>\n                <Input id=\"component-simple\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\n              </FormControl>\n              <FormControl>\n                <InputLabel htmlFor=\"component-simple\">Email</InputLabel>\n                <Input id=\"component-simple\" value={email} onChange={(e) => setEmail(e.target.value)} />\n              </FormControl>\n              <FormControl>\n                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                <Input id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n              </FormControl>\n              <FormControl>\n                <InputLabel htmlFor=\"component-simple\">Confirm Password</InputLabel>\n                <Input id=\"component-simple\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\n              </FormControl>\n              <Button onClick={handleSubmit} variant='contained' color='secondary' style={{ marginTop: \"16px\" }}>Register</Button>\n            </form>\n            <Typography variant=\"subtitle1\">\n              Already registered? <Link className={classes.link} to=\"/login\"><strong>Login</strong></Link>\n            </Typography>\n          </Paper>\n        </Container>\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default RegisterScreen\n","/home/lee/Desktop/recipeBook/frontend/src/store.js",[],"/home/lee/Desktop/recipeBook/frontend/src/screens/HomeScreen.js",[],"/home/lee/Desktop/recipeBook/frontend/src/screens/RecipeScreen.js",[],"/home/lee/Desktop/recipeBook/frontend/src/components/Ingredient.js",[],"/home/lee/Desktop/recipeBook/frontend/src/actions/userActions.js",[],"/home/lee/Desktop/recipeBook/frontend/src/constants/userContants.js",[],"/home/lee/Desktop/recipeBook/frontend/src/reducers/recipeReducers.js",[],"/home/lee/Desktop/recipeBook/frontend/src/constants/recipeConstants.js",[],"/home/lee/Desktop/recipeBook/frontend/src/actions/recipeActions.js",[],"/home/lee/Desktop/recipeBook/frontend/src/components/Loader.js",[],"/home/lee/Desktop/recipeBook/frontend/src/components/Message.js",[],"/home/lee/Desktop/recipeBook/frontend/src/reducers/userReducers.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":5,"column":3,"nodeType":"105","messageId":"106","endLine":5,"endColumn":9},{"ruleId":"103","severity":1,"message":"107","line":6,"column":3,"nodeType":"105","messageId":"106","endLine":6,"endColumn":10},{"ruleId":"103","severity":1,"message":"108","line":7,"column":3,"nodeType":"105","messageId":"106","endLine":7,"endColumn":13},{"ruleId":"103","severity":1,"message":"109","line":11,"column":3,"nodeType":"105","messageId":"106","endLine":11,"endColumn":7},{"ruleId":"103","severity":1,"message":"110","line":13,"column":3,"nodeType":"105","messageId":"106","endLine":13,"endColumn":7},{"ruleId":"99","replacedBy":"111"},{"ruleId":"101","replacedBy":"112"},{"ruleId":"103","severity":1,"message":"113","line":64,"column":20,"nodeType":"105","messageId":"106","endLine":64,"endColumn":31},{"ruleId":"103","severity":1,"message":"114","line":65,"column":16,"nodeType":"105","messageId":"106","endLine":65,"endColumn":23},{"ruleId":"103","severity":1,"message":"115","line":81,"column":11,"nodeType":"105","messageId":"106","endLine":81,"endColumn":18},{"ruleId":"103","severity":1,"message":"116","line":81,"column":20,"nodeType":"105","messageId":"106","endLine":81,"endColumn":25},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Fade' is defined but never used.","'Zoom' is defined but never used.",["117"],["118"],"'setLoggedIn' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]